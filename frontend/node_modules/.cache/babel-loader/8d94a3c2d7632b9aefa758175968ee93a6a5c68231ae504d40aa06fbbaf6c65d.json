{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eswar Narayana\\\\Desktop\\\\Eye Hospital\\\\frontend\\\\src\\\\components\\\\DisplayScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Grid, Card, CardContent, Typography, Paper, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, AppBar, Toolbar, IconButton, Button } from '@mui/material';\nimport { Refresh, Visibility, LocalHospital, Schedule, CheckCircle, Person } from '@mui/icons-material';\nimport { useSocket } from '../contexts/SocketContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayScreen = () => {\n  _s();\n  var _displayData$opds;\n  const {\n    joinDisplay,\n    leaveDisplay,\n    onDisplayUpdate,\n    removeAllListeners\n  } = useSocket();\n  const [displayData, setDisplayData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  useEffect(() => {\n    fetchDisplayData();\n    joinDisplay();\n\n    // Set up real-time updates\n    onDisplayUpdate(() => {\n      fetchDisplayData();\n    });\n\n    // Auto-refresh every 30 seconds\n    const interval = setInterval(fetchDisplayData, 30000);\n    return () => {\n      leaveDisplay();\n      removeAllListeners();\n      clearInterval(interval);\n    };\n  }, []);\n  const fetchDisplayData = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/display/all');\n      setDisplayData(response.data);\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error('Failed to fetch display data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    const statusColors = {\n      pending: 'warning',\n      in: 'info',\n      dilated: 'secondary',\n      referred: 'error',\n      end_visit: 'success'\n    };\n    return statusColors[status] || 'default';\n  };\n  const getStatusLabel = status => {\n    const statusLabels = {\n      pending: 'Waiting',\n      in: 'In OPD',\n      dilated: 'Dilated',\n      referred: 'Referred',\n      end_visit: 'Completed'\n    };\n    return statusLabels[status] || status;\n  };\n  const formatWaitingTime = waitingTime => {\n    if (!waitingTime) return 'N/A';\n    return `${waitingTime} min`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      flexDirection: \"column\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Loading Display Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      bgcolor: '#f5f5f5',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            textAlign: 'center'\n          },\n          children: \"Eye Hospital - Patient Queue Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: fetchDisplayData,\n          children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: [lastUpdated && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        align: \"center\",\n        gutterBottom: true,\n        children: [\"Last Updated: \", lastUpdated.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: displayData === null || displayData === void 0 ? void 0 : (_displayData$opds = displayData.opds) === null || _displayData$opds === void 0 ? void 0 : _displayData$opds.map(opd => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(LocalHospital, {\n                  color: \"primary\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: opd.opd_type.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), opd.current_patient && /*#__PURE__*/_jsxDEV(Paper, {\n                elevation: 3,\n                sx: {\n                  p: 2,\n                  mb: 2,\n                  bgcolor: 'primary.light',\n                  color: 'primary.contrastText'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Currently Being Served\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      component: \"div\",\n                      children: opd.current_patient.token_number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: opd.current_patient.patient_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    sx: {\n                      fontSize: 40\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mt: 1\n                  },\n                  children: [\"Waiting Time: \", formatWaitingTime(opd.current_patient.waiting_time_minutes)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: [\"Next in Queue (\", opd.next_patients.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), opd.next_patients.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                children: opd.next_patients.map((patient, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        color: \"primary\",\n                        children: patient.position\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: patient.token_number,\n                      secondary: patient.patient_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      gap: 1,\n                      children: [/*#__PURE__*/_jsxDEV(Chip, {\n                        label: getStatusLabel(patient.status),\n                        color: getStatusColor(patient.status),\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 31\n                      }, this), patient.is_dilated && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: \"Dilated\",\n                        color: \"secondary\",\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this), index < opd.next_patients.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 68\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                align: \"center\",\n                children: \"No patients in queue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                p: 2,\n                bgcolor: \"grey.100\",\n                borderRadius: 1,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Total Patients: \", opd.total_patients]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), opd.estimated_wait_time && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Est. Wait Time: \", opd.estimated_wait_time, \" minutes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, opd.opd_type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), displayData && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Today's Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 3,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"primary\",\n                    children: displayData.opds.reduce((sum, opd) => sum + opd.total_patients, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Total Patients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 3,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"warning.main\",\n                    children: displayData.opds.reduce((sum, opd) => sum + opd.next_patients.length, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Waiting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 3,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"info.main\",\n                    children: displayData.opds.filter(opd => opd.current_patient).length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Being Served\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 3,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"success.main\",\n                    children: displayData.opds.reduce((sum, opd) => sum + opd.next_patients.filter(p => p.is_dilated).length, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Dilated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayScreen, \"zcqTm9PzOcKzLxMafc1p5f1M/K0=\", false, function () {\n  return [useSocket];\n});\n_c = DisplayScreen;\nexport default DisplayScreen;\nvar _c;\n$RefreshReg$(_c, \"DisplayScreen\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Grid","Card","CardContent","Typography","Paper","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","AppBar","Toolbar","IconButton","Button","Refresh","Visibility","LocalHospital","Schedule","CheckCircle","Person","useSocket","axios","jsxDEV","_jsxDEV","DisplayScreen","_s","_displayData$opds","joinDisplay","leaveDisplay","onDisplayUpdate","removeAllListeners","displayData","setDisplayData","loading","setLoading","lastUpdated","setLastUpdated","fetchDisplayData","interval","setInterval","clearInterval","response","get","data","Date","error","console","getStatusColor","status","statusColors","pending","in","dilated","referred","end_visit","getStatusLabel","statusLabels","formatWaitingTime","waitingTime","display","justifyContent","alignItems","minHeight","flexDirection","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","bgcolor","position","color","component","textAlign","onClick","maxWidth","mt","mb","align","toLocaleTimeString","container","spacing","opds","map","opd","item","xs","md","height","mr","opd_type","toUpperCase","current_patient","elevation","p","token_number","patient_name","fontSize","waiting_time_minutes","next_patients","length","dense","patient","index","Fragment","primary","secondary","gap","label","size","is_dilated","borderRadius","total_patients","estimated_wait_time","sm","reduce","sum","filter","_c","$RefreshReg$"],"sources":["C:/Users/Eswar Narayana/Desktop/Eye Hospital/frontend/src/components/DisplayScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Chip,\r\n  Divider,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Button,\r\n} from '@mui/material';\r\nimport {\r\n  Refresh,\r\n  Visibility,\r\n  LocalHospital,\r\n  Schedule,\r\n  CheckCircle,\r\n  Person,\r\n} from '@mui/icons-material';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport axios from 'axios';\r\n\r\nconst DisplayScreen = () => {\r\n  const { joinDisplay, leaveDisplay, onDisplayUpdate, removeAllListeners } = useSocket();\r\n  const [displayData, setDisplayData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchDisplayData();\r\n    joinDisplay();\r\n    \r\n    // Set up real-time updates\r\n    onDisplayUpdate(() => {\r\n      fetchDisplayData();\r\n    });\r\n\r\n    // Auto-refresh every 30 seconds\r\n    const interval = setInterval(fetchDisplayData, 30000);\r\n\r\n    return () => {\r\n      leaveDisplay();\r\n      removeAllListeners();\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const fetchDisplayData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/api/display/all');\r\n      setDisplayData(response.data);\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Failed to fetch display data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const statusColors = {\r\n      pending: 'warning',\r\n      in: 'info',\r\n      dilated: 'secondary',\r\n      referred: 'error',\r\n      end_visit: 'success',\r\n    };\r\n    return statusColors[status] || 'default';\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    const statusLabels = {\r\n      pending: 'Waiting',\r\n      in: 'In OPD',\r\n      dilated: 'Dilated',\r\n      referred: 'Referred',\r\n      end_visit: 'Completed',\r\n    };\r\n    return statusLabels[status] || status;\r\n  };\r\n\r\n  const formatWaitingTime = (waitingTime) => {\r\n    if (!waitingTime) return 'N/A';\r\n    return `${waitingTime} min`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"100vh\"\r\n        flexDirection=\"column\"\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Loading Display Data...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, bgcolor: '#f5f5f5', minHeight: '100vh' }}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" component=\"div\" sx={{ flexGrow: 1, textAlign: 'center' }}>\r\n            Eye Hospital - Patient Queue Display\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={fetchDisplayData}>\r\n            <Refresh />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container maxWidth=\"xl\" sx={{ mt: 2, mb: 2 }}>\r\n        {lastUpdated && (\r\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" gutterBottom>\r\n            Last Updated: {lastUpdated.toLocaleTimeString()}\r\n          </Typography>\r\n        )}\r\n\r\n        <Grid container spacing={3}>\r\n          {displayData?.opds?.map((opd) => (\r\n            <Grid item xs={12} md={4} key={opd.opd_type}>\r\n              <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                <CardContent sx={{ flexGrow: 1 }}>\r\n                  <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                    <LocalHospital color=\"primary\" sx={{ mr: 1 }} />\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      {opd.opd_type.toUpperCase()}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  {/* Current Patient */}\r\n                  {opd.current_patient && (\r\n                    <Paper\r\n                      elevation={3}\r\n                      sx={{\r\n                        p: 2,\r\n                        mb: 2,\r\n                        bgcolor: 'primary.light',\r\n                        color: 'primary.contrastText',\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Currently Being Served\r\n                      </Typography>\r\n                      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Box>\r\n                          <Typography variant=\"h4\" component=\"div\">\r\n                            {opd.current_patient.token_number}\r\n                          </Typography>\r\n                          <Typography variant=\"h6\">\r\n                            {opd.current_patient.patient_name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <CheckCircle sx={{ fontSize: 40 }} />\r\n                      </Box>\r\n                      <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                        Waiting Time: {formatWaitingTime(opd.current_patient.waiting_time_minutes)}\r\n                      </Typography>\r\n                    </Paper>\r\n                  )}\r\n\r\n                  {/* Next Patients */}\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Next in Queue ({opd.next_patients.length})\r\n                  </Typography>\r\n                  \r\n                  {opd.next_patients.length > 0 ? (\r\n                    <List dense>\r\n                      {opd.next_patients.map((patient, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <ListItem>\r\n                            <ListItemIcon>\r\n                              <Typography variant=\"h6\" color=\"primary\">\r\n                                {patient.position}\r\n                              </Typography>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={patient.token_number}\r\n                              secondary={patient.patient_name}\r\n                            />\r\n                            <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                              <Chip\r\n                                label={getStatusLabel(patient.status)}\r\n                                color={getStatusColor(patient.status)}\r\n                                size=\"small\"\r\n                              />\r\n                              {patient.is_dilated && (\r\n                                <Chip\r\n                                  label=\"Dilated\"\r\n                                  color=\"secondary\"\r\n                                  size=\"small\"\r\n                                />\r\n                              )}\r\n                            </Box>\r\n                          </ListItem>\r\n                          {index < opd.next_patients.length - 1 && <Divider />}\r\n                        </React.Fragment>\r\n                      ))}\r\n                    </List>\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n                      No patients in queue\r\n                    </Typography>\r\n                  )}\r\n\r\n                  {/* Queue Statistics */}\r\n                  <Box mt={2} p={2} bgcolor=\"grey.100\" borderRadius={1}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Total Patients: {opd.total_patients}\r\n                    </Typography>\r\n                    {opd.estimated_wait_time && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Est. Wait Time: {opd.estimated_wait_time} minutes\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        {/* Summary Statistics */}\r\n        {displayData && (\r\n          <Box mt={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Today's Summary\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} sm={3}>\r\n                    <Box textAlign=\"center\">\r\n                      <Typography variant=\"h4\" color=\"primary\">\r\n                        {displayData.opds.reduce((sum, opd) => sum + opd.total_patients, 0)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Total Patients\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={3}>\r\n                    <Box textAlign=\"center\">\r\n                      <Typography variant=\"h4\" color=\"warning.main\">\r\n                        {displayData.opds.reduce((sum, opd) => sum + opd.next_patients.length, 0)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Waiting\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={3}>\r\n                    <Box textAlign=\"center\">\r\n                      <Typography variant=\"h4\" color=\"info.main\">\r\n                        {displayData.opds.filter(opd => opd.current_patient).length}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Being Served\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={3}>\r\n                    <Box textAlign=\"center\">\r\n                      <Typography variant=\"h4\" color=\"success.main\">\r\n                        {displayData.opds.reduce((sum, opd) => \r\n                        sum + opd.next_patients.filter(p => p.is_dilated).length, 0)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Dilated\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DisplayScreen;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,SAAS,EACTC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,IAAI,EACJC,OAAO,EACPC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,MAAM,QACD,eAAe;AACtB,SACEC,OAAO,EACPC,UAAU,EACVC,aAAa,EACbC,QAAQ,EACRC,WAAW,EACXC,MAAM,QACD,qBAAqB;AAC5B,SAASC,SAAS,QAAQ,2BAA2B;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EAC1B,MAAM;IAAEC,WAAW;IAAEC,YAAY;IAAEC,eAAe;IAAEC;EAAmB,CAAC,GAAGV,SAAS,CAAC,CAAC;EACtF,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsC,OAAO,EAAEC,UAAU,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdyC,gBAAgB,CAAC,CAAC;IAClBV,WAAW,CAAC,CAAC;;IAEb;IACAE,eAAe,CAAC,MAAM;MACpBQ,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAGC,WAAW,CAACF,gBAAgB,EAAE,KAAK,CAAC;IAErD,OAAO,MAAM;MACXT,YAAY,CAAC,CAAC;MACdE,kBAAkB,CAAC,CAAC;MACpBU,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,uCAAuC,CAAC;MACzEV,cAAc,CAACS,QAAQ,CAACE,IAAI,CAAC;MAC7BP,cAAc,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMa,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMC,YAAY,GAAG;MACnBC,OAAO,EAAE,SAAS;MAClBC,EAAE,EAAE,MAAM;MACVC,OAAO,EAAE,WAAW;MACpBC,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE;IACb,CAAC;IACD,OAAOL,YAAY,CAACD,MAAM,CAAC,IAAI,SAAS;EAC1C,CAAC;EAED,MAAMO,cAAc,GAAIP,MAAM,IAAK;IACjC,MAAMQ,YAAY,GAAG;MACnBN,OAAO,EAAE,SAAS;MAClBC,EAAE,EAAE,QAAQ;MACZC,OAAO,EAAE,SAAS;MAClBC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE;IACb,CAAC;IACD,OAAOE,YAAY,CAACR,MAAM,CAAC,IAAIA,MAAM;EACvC,CAAC;EAED,MAAMS,iBAAiB,GAAIC,WAAW,IAAK;IACzC,IAAI,CAACA,WAAW,EAAE,OAAO,KAAK;IAC9B,OAAO,GAAGA,WAAW,MAAM;EAC7B,CAAC;EAED,IAAIzB,OAAO,EAAE;IACX,oBACEV,OAAA,CAAC1B,GAAG;MACF8D,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAC,OAAO;MACjBC,aAAa,EAAC,QAAQ;MAAAC,QAAA,eAEtBzC,OAAA,CAACrB,UAAU;QAAC+D,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAEtC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEV;EAEA,oBACE/C,OAAA,CAAC1B,GAAG;IAAC0E,EAAE,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,OAAO,EAAE,SAAS;MAAEX,SAAS,EAAE;IAAQ,CAAE;IAAAE,QAAA,gBAC/DzC,OAAA,CAACb,MAAM;MAACgE,QAAQ,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAAAX,QAAA,eACvCzC,OAAA,CAACZ,OAAO;QAAAqD,QAAA,gBACNzC,OAAA,CAACrB,UAAU;UAAC+D,OAAO,EAAC,IAAI;UAACW,SAAS,EAAC,KAAK;UAACL,EAAE,EAAE;YAAEC,QAAQ,EAAE,CAAC;YAAEK,SAAS,EAAE;UAAS,CAAE;UAAAb,QAAA,EAAC;QAEnF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb/C,OAAA,CAACX,UAAU;UAAC+D,KAAK,EAAC,SAAS;UAACG,OAAO,EAAEzC,gBAAiB;UAAA2B,QAAA,eACpDzC,OAAA,CAACT,OAAO;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAET/C,OAAA,CAACzB,SAAS;MAACiF,QAAQ,EAAC,IAAI;MAACR,EAAE,EAAE;QAAES,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAjB,QAAA,GAC3C7B,WAAW,iBACVZ,OAAA,CAACrB,UAAU;QAAC+D,OAAO,EAAC,OAAO;QAACU,KAAK,EAAC,gBAAgB;QAACO,KAAK,EAAC,QAAQ;QAAChB,YAAY;QAAAF,QAAA,GAAC,gBAC/D,EAAC7B,WAAW,CAACgD,kBAAkB,CAAC,CAAC;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CACb,eAED/C,OAAA,CAACxB,IAAI;QAACqF,SAAS;QAACC,OAAO,EAAE,CAAE;QAAArB,QAAA,EACxBjC,WAAW,aAAXA,WAAW,wBAAAL,iBAAA,GAAXK,WAAW,CAAEuD,IAAI,cAAA5D,iBAAA,uBAAjBA,iBAAA,CAAmB6D,GAAG,CAAEC,GAAG,iBAC1BjE,OAAA,CAACxB,IAAI;UAAC0F,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAA3B,QAAA,eACvBzC,OAAA,CAACvB,IAAI;YAACuE,EAAE,EAAE;cAAEqB,MAAM,EAAE,MAAM;cAAEjC,OAAO,EAAE,MAAM;cAAEI,aAAa,EAAE;YAAS,CAAE;YAAAC,QAAA,eACrEzC,OAAA,CAACtB,WAAW;cAACsE,EAAE,EAAE;gBAAEC,QAAQ,EAAE;cAAE,CAAE;cAAAR,QAAA,gBAC/BzC,OAAA,CAAC1B,GAAG;gBAAC8D,OAAO,EAAC,MAAM;gBAACE,UAAU,EAAC,QAAQ;gBAACoB,EAAE,EAAE,CAAE;gBAAAjB,QAAA,gBAC5CzC,OAAA,CAACP,aAAa;kBAAC2D,KAAK,EAAC,SAAS;kBAACJ,EAAE,EAAE;oBAAEsB,EAAE,EAAE;kBAAE;gBAAE;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAChD/C,OAAA,CAACrB,UAAU;kBAAC+D,OAAO,EAAC,IAAI;kBAACW,SAAS,EAAC,IAAI;kBAAAZ,QAAA,EACpCwB,GAAG,CAACM,QAAQ,CAACC,WAAW,CAAC;gBAAC;kBAAA5B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,EAGLkB,GAAG,CAACQ,eAAe,iBAClBzE,OAAA,CAACpB,KAAK;gBACJ8F,SAAS,EAAE,CAAE;gBACb1B,EAAE,EAAE;kBACF2B,CAAC,EAAE,CAAC;kBACJjB,EAAE,EAAE,CAAC;kBACLR,OAAO,EAAE,eAAe;kBACxBE,KAAK,EAAE;gBACT,CAAE;gBAAAX,QAAA,gBAEFzC,OAAA,CAACrB,UAAU;kBAAC+D,OAAO,EAAC,IAAI;kBAACC,YAAY;kBAAAF,QAAA,EAAC;gBAEtC;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACb/C,OAAA,CAAC1B,GAAG;kBAAC8D,OAAO,EAAC,MAAM;kBAACE,UAAU,EAAC,QAAQ;kBAACD,cAAc,EAAC,eAAe;kBAAAI,QAAA,gBACpEzC,OAAA,CAAC1B,GAAG;oBAAAmE,QAAA,gBACFzC,OAAA,CAACrB,UAAU;sBAAC+D,OAAO,EAAC,IAAI;sBAACW,SAAS,EAAC,KAAK;sBAAAZ,QAAA,EACrCwB,GAAG,CAACQ,eAAe,CAACG;oBAAY;sBAAAhC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACvB,CAAC,eACb/C,OAAA,CAACrB,UAAU;sBAAC+D,OAAO,EAAC,IAAI;sBAAAD,QAAA,EACrBwB,GAAG,CAACQ,eAAe,CAACI;oBAAY;sBAAAjC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACvB,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV,CAAC,eACN/C,OAAA,CAACL,WAAW;oBAACqD,EAAE,EAAE;sBAAE8B,QAAQ,EAAE;oBAAG;kBAAE;oBAAAlC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC,eACN/C,OAAA,CAACrB,UAAU;kBAAC+D,OAAO,EAAC,OAAO;kBAACM,EAAE,EAAE;oBAAES,EAAE,EAAE;kBAAE,CAAE;kBAAAhB,QAAA,GAAC,gBAC3B,EAACP,iBAAiB,CAAC+B,GAAG,CAACQ,eAAe,CAACM,oBAAoB,CAAC;gBAAA;kBAAAnC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CACR,eAGD/C,OAAA,CAACrB,UAAU;gBAAC+D,OAAO,EAAC,IAAI;gBAACC,YAAY;gBAAAF,QAAA,GAAC,iBACrB,EAACwB,GAAG,CAACe,aAAa,CAACC,MAAM,EAAC,GAC3C;cAAA;gBAAArC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,EAEZkB,GAAG,CAACe,aAAa,CAACC,MAAM,GAAG,CAAC,gBAC3BjF,OAAA,CAACnB,IAAI;gBAACqG,KAAK;gBAAAzC,QAAA,EACRwB,GAAG,CAACe,aAAa,CAAChB,GAAG,CAAC,CAACmB,OAAO,EAAEC,KAAK,kBACpCpF,OAAA,CAAC7B,KAAK,CAACkH,QAAQ;kBAAA5C,QAAA,gBACbzC,OAAA,CAAClB,QAAQ;oBAAA2D,QAAA,gBACPzC,OAAA,CAAChB,YAAY;sBAAAyD,QAAA,eACXzC,OAAA,CAACrB,UAAU;wBAAC+D,OAAO,EAAC,IAAI;wBAACU,KAAK,EAAC,SAAS;wBAAAX,QAAA,EACrC0C,OAAO,CAAChC;sBAAQ;wBAAAP,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACP;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,eACf/C,OAAA,CAACjB,YAAY;sBACXuG,OAAO,EAAEH,OAAO,CAACP,YAAa;sBAC9BW,SAAS,EAAEJ,OAAO,CAACN;oBAAa;sBAAAjC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjC,CAAC,eACF/C,OAAA,CAAC1B,GAAG;sBAAC8D,OAAO,EAAC,MAAM;sBAACE,UAAU,EAAC,QAAQ;sBAACkD,GAAG,EAAE,CAAE;sBAAA/C,QAAA,gBAC7CzC,OAAA,CAACf,IAAI;wBACHwG,KAAK,EAAEzD,cAAc,CAACmD,OAAO,CAAC1D,MAAM,CAAE;wBACtC2B,KAAK,EAAE5B,cAAc,CAAC2D,OAAO,CAAC1D,MAAM,CAAE;wBACtCiE,IAAI,EAAC;sBAAO;wBAAA9C,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACb,CAAC,EACDoC,OAAO,CAACQ,UAAU,iBACjB3F,OAAA,CAACf,IAAI;wBACHwG,KAAK,EAAC,SAAS;wBACfrC,KAAK,EAAC,WAAW;wBACjBsC,IAAI,EAAC;sBAAO;wBAAA9C,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACb,CACF;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC,EACVqC,KAAK,GAAGnB,GAAG,CAACe,aAAa,CAACC,MAAM,GAAG,CAAC,iBAAIjF,OAAA,CAACd,OAAO;oBAAA0D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA,GA1BjCqC,KAAK;kBAAAxC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OA2BV,CACjB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,gBAEP/C,OAAA,CAACrB,UAAU;gBAAC+D,OAAO,EAAC,OAAO;gBAACU,KAAK,EAAC,gBAAgB;gBAACO,KAAK,EAAC,QAAQ;gBAAAlB,QAAA,EAAC;cAElE;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CACb,eAGD/C,OAAA,CAAC1B,GAAG;gBAACmF,EAAE,EAAE,CAAE;gBAACkB,CAAC,EAAE,CAAE;gBAACzB,OAAO,EAAC,UAAU;gBAAC0C,YAAY,EAAE,CAAE;gBAAAnD,QAAA,gBACnDzC,OAAA,CAACrB,UAAU;kBAAC+D,OAAO,EAAC,OAAO;kBAACU,KAAK,EAAC,gBAAgB;kBAAAX,QAAA,GAAC,kBACjC,EAACwB,GAAG,CAAC4B,cAAc;gBAAA;kBAAAjD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,EACZkB,GAAG,CAAC6B,mBAAmB,iBACtB9F,OAAA,CAACrB,UAAU;kBAAC+D,OAAO,EAAC,OAAO;kBAACU,KAAK,EAAC,gBAAgB;kBAAAX,QAAA,GAAC,kBACjC,EAACwB,GAAG,CAAC6B,mBAAmB,EAAC,UAC3C;gBAAA;kBAAAlD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CACb;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,GAjGsBkB,GAAG,CAACM,QAAQ;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkGrC,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGNvC,WAAW,iBACVR,OAAA,CAAC1B,GAAG;QAACmF,EAAE,EAAE,CAAE;QAAAhB,QAAA,eACTzC,OAAA,CAACvB,IAAI;UAAAgE,QAAA,eACHzC,OAAA,CAACtB,WAAW;YAAA+D,QAAA,gBACVzC,OAAA,CAACrB,UAAU;cAAC+D,OAAO,EAAC,IAAI;cAACC,YAAY;cAAAF,QAAA,EAAC;YAEtC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb/C,OAAA,CAACxB,IAAI;cAACqF,SAAS;cAACC,OAAO,EAAE,CAAE;cAAArB,QAAA,gBACzBzC,OAAA,CAACxB,IAAI;gBAAC0F,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAC4B,EAAE,EAAE,CAAE;gBAAAtD,QAAA,eACtBzC,OAAA,CAAC1B,GAAG;kBAACgF,SAAS,EAAC,QAAQ;kBAAAb,QAAA,gBACrBzC,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,IAAI;oBAACU,KAAK,EAAC,SAAS;oBAAAX,QAAA,EACrCjC,WAAW,CAACuD,IAAI,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEhC,GAAG,KAAKgC,GAAG,GAAGhC,GAAG,CAAC4B,cAAc,EAAE,CAAC;kBAAC;oBAAAjD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzD,CAAC,eACb/C,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,OAAO;oBAACU,KAAK,EAAC,gBAAgB;oBAAAX,QAAA,EAAC;kBAEnD;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACP/C,OAAA,CAACxB,IAAI;gBAAC0F,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAC4B,EAAE,EAAE,CAAE;gBAAAtD,QAAA,eACtBzC,OAAA,CAAC1B,GAAG;kBAACgF,SAAS,EAAC,QAAQ;kBAAAb,QAAA,gBACrBzC,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,IAAI;oBAACU,KAAK,EAAC,cAAc;oBAAAX,QAAA,EAC1CjC,WAAW,CAACuD,IAAI,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEhC,GAAG,KAAKgC,GAAG,GAAGhC,GAAG,CAACe,aAAa,CAACC,MAAM,EAAE,CAAC;kBAAC;oBAAArC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/D,CAAC,eACb/C,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,OAAO;oBAACU,KAAK,EAAC,gBAAgB;oBAAAX,QAAA,EAAC;kBAEnD;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACP/C,OAAA,CAACxB,IAAI;gBAAC0F,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAC4B,EAAE,EAAE,CAAE;gBAAAtD,QAAA,eACtBzC,OAAA,CAAC1B,GAAG;kBAACgF,SAAS,EAAC,QAAQ;kBAAAb,QAAA,gBACrBzC,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,IAAI;oBAACU,KAAK,EAAC,WAAW;oBAAAX,QAAA,EACvCjC,WAAW,CAACuD,IAAI,CAACmC,MAAM,CAACjC,GAAG,IAAIA,GAAG,CAACQ,eAAe,CAAC,CAACQ;kBAAM;oBAAArC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjD,CAAC,eACb/C,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,OAAO;oBAACU,KAAK,EAAC,gBAAgB;oBAAAX,QAAA,EAAC;kBAEnD;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACP/C,OAAA,CAACxB,IAAI;gBAAC0F,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAC4B,EAAE,EAAE,CAAE;gBAAAtD,QAAA,eACtBzC,OAAA,CAAC1B,GAAG;kBAACgF,SAAS,EAAC,QAAQ;kBAAAb,QAAA,gBACrBzC,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,IAAI;oBAACU,KAAK,EAAC,cAAc;oBAAAX,QAAA,EAC1CjC,WAAW,CAACuD,IAAI,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEhC,GAAG,KAClCgC,GAAG,GAAGhC,GAAG,CAACe,aAAa,CAACkB,MAAM,CAACvB,CAAC,IAAIA,CAAC,CAACgB,UAAU,CAAC,CAACV,MAAM,EAAE,CAAC;kBAAC;oBAAArC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClD,CAAC,eACb/C,OAAA,CAACrB,UAAU;oBAAC+D,OAAO,EAAC,OAAO;oBAACU,KAAK,EAAC,gBAAgB;oBAAAX,QAAA,EAAC;kBAEnD;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAC7C,EAAA,CAtQID,aAAa;EAAA,QAC0DJ,SAAS;AAAA;AAAAsG,EAAA,GADhFlG,aAAa;AAwQnB,eAAeA,aAAa;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}